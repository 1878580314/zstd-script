name: Build Releases

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python: '3.11'
            archive_name: zstd-linux.tar.gz
            artifact_name: zstd-linux
            executable: zstd
          - os: windows-latest
            python: '3.11'
            archive_name: zstd-windows.zip
            artifact_name: zstd-windows
            executable: zstd.exe
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install zstandard rich cryptography pyinstaller

      - name: Build executable
        run: pyinstaller --onefile --name zstd zstd.py

      - name: Package artifact (Linux)
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          tar -czf ${{ matrix.archive_name }} -C dist ${{ matrix.executable }}

      - name: Package artifact (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          Compress-Archive -Path "dist\${{ matrix.executable }}" -DestinationPath ${{ matrix.archive_name }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.archive_name }}
          if-no-files-found: error

  publish:
    name: Publish Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List artifacts
        run: ls -R artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/zstd-linux/zstd-linux.tar.gz
            artifacts/zstd-windows/zstd-windows.zip
          generate_release_notes: true
